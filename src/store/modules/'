// import { Store } from 'vuex';
import { Dispatch, Commit } from 'vuex';

import { CartDataService } from '@/api/cart';

export default {
	namespaced: true,
  state: {
	cart: null,
  },
  mutations: {
	setCart(state: Record<string,any>, cart: Record<string,any>) {
		state.cart = cart 
	}
  },
  actions: {
	async createCartAPI(
		{state, commit}: {state: Record<string,any>, commit: Commit},	
		{
	) {
	},
	async addLineItemAPI(
		{state, dispatch, commit}: {state: Record<string, any>, dispatch: Dispatch, commit: Commit},
		{product_id}: {product_id: Record<string,any>}
	) {
		if (!state.cart) {
		}
		const line_item = {
			"product_id": product.id,
			"quantity": 1
		}
		const response = await CartDataService.addCartItems(state.cart.cart_id, [line_item])
		if (response.status == 200) {
			commit("setCart", response.data)
			return true
		} else {return false}
	},
  },
}
